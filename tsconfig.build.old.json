{
  /**
   * Compiler Options
   *
   * Ordered and grouped according to
   * https://www.typescriptlang.org/tsconfig
   */
  "compilerOptions": {
    /**
     * Type Checking
     *
     * - `strict` to reduce type issues
     */
    "strict": true,
    /**
     * Interop Constraints
     *
     * - allow default imports like `import x from 'x'`
     * - esModuleInterop supports supports
     *   - `import * as x from 'x'` and
     *   - `import x from 'x'`
     * - ensure case sensitivity
     * - strict isolated modules to help with interop
     */
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "isolatedModules": true,
    /**
     * Languages and Environment
     *
     * - `target` and `lib` for modern JavaScript
     */
    "target": "esnext",
    "lib": ["esnext"],
    /**
     * Modules
     *
     * - `baseUrl` to support `src/abc` to access `./src/abc`
     * - `commonjs` for node projects
     * - `node` for Node.js CommonJS implementation (`node12` or `nodenext` for future)
     * - support JSON with `resolveJsonModule`
     * - `rootDir` to specify what `.dist` root will be
     * - `typeRoots` for where to look for premade types to be included
     */
    "baseUrl": ".",
    "module": "commonjs",
    "moduleResolution": "node",
    "paths": { "~/*": ["*"] },
    "resolveJsonModule": true,
    "rootDir": ".",
    "typeRoots": ["./types", "./node_modules/@types"],
    /**
     * Emit
     *
     * - emit `declaration`s
     * - emit to `outDir` of `.dist`
     */
    "declaration": true,
    "outDir": ".dist",
    /**
     * Completeness
     *
     * - `skipLibCheck` improves performance but sacrifices accuracy with duplicate libraries
     */
    "skipLibCheck": true
  },
  "include": ["src"],
  /**
   * Exclude `*.test.ts` files anywhere plus any files in a `test` directory
   */
  "exclude": ["**/*.test.ts", "**/test/**/*"]
}
